<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
       
       <!-- Spring的配置文件  和业务逻辑有关-->
       
       
       <!-- 不扫描控制器 其余都扫描 -->
       <context:component-scan base-package="com.jxufe">
       		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
       </context:component-scan>
       
       <!-- 引入外部文件 -->
       <context:property-placeholder location="classpath:dbconfig.properties"/>
       
       
       <!-- 数据源 ， 事物控制 -->
       <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
       		<property name="driverClass" value="${jdbc.driverClass}"></property>
       		<property name="user" value="${jdbc.username}"></property>
       		<property name="password" value="${jdbc.password}"></property>
       		<!--连接池中保留的最小连接数。-->
			<property name="minPoolSize" value="10" />
			<!--连接池中保留的最大连接数。Default: 15 -->
			<property name="maxPoolSize" value="100" />
			<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
			<property name="maxIdleTime" value="1800" />
			<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
			<property name="acquireIncrement" value="3" />
			<property name="maxStatements" value="1000" />
			<property name="initialPoolSize" value="10" />
			<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
			<property name="idleConnectionTestPeriod" value="60" />
			
       </bean>
       
       <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->  
	    <bean id="mappingJacksonHttpMessageConverter"  
	        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	        <property name="supportedMediaTypes">  
	            <list>  
	                <value>text/html;charset=utf-8</value>  
	            </list>  
	        </property>  
	    </bean>  
	    
	    <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        
        
        <!-- 上传文件大小上限，单位为字节（30MB）1024*200即200k -->
        <property name="maxUploadSize">  
            <value>31457280</value>  
        </property>  
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>
       
       <!-- mybatis整合 -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       		<!-- 指定mybatis全局配置文件 -->
       		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
       		<property name="dataSource" ref="pooledDataSource"></property>
       		<!-- 指定mapper文件 -->
       		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
       </bean>
       
       <!-- 批量操作 数据-->
       <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
       		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
       		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
       </bean>
       
       <!-- 配置扫描器  将mybatis接口实现加入到IOC容器中-->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       		<!-- 扫描所有的dao接口 -->
       		<property name="basePackage" value="com.jxufe.mapper"></property>
       </bean>
       
       
       <!-- 事务控制器 -->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       		<!-- 控制数据源 -->
       		<property name="dataSource" ref="pooledDataSource"></property>
       </bean>
       
       <!-- 引入shiro配置文件 -->
      <import resource="classpath:spring-shiro.xml"/>
       
       <!-- 开启基于注解的事务控制  或者xml-->
       <aop:config>
     		<!--切入点表达式  service所有下的类的所有方法 -->
     		<aop:pointcut expression="execution(* com.jxufe.service..*(..))" id="txPoint"/>
     		<!-- 配置事务增强 -->
     		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
       </aop:config>
       
       <!-- 配置事务如何增强 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
       		<tx:attributes>
       			<!-- 所有方法都是事务方法 -->
       			<tx:method name="*"/>
       			<!-- 以get方法开头的方法 -->
       			<tx:method name="get*" read-only="true"/>
       		</tx:attributes>
       </tx:advice>
       
      
      
</beans>
